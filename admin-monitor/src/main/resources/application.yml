info:
  contact:
    email: ${project.build.email}
    phone: ${project.build.cellphone}
  version: ${project.version}
  description: ${project.description}

spring:
  application:
    # 指定发布的微服务名（以后调用时，只需该名称即可访问该服务）
    name: ${project.module.admin.monitor}
  # 发件人的邮箱设置
  mail:
    default-encoding: UTF-8
    host: smtp.163.com
    port: 25
    username: 18158861761@163.com
    password: qw111222
  boot:
    admin:
      # Turbine UI Module
      turbine:
        enabled: true
        # turbine服务的serviceId,默认为turbine
        location: ${project.module.turbine.monitor}
        clusters: ${config.turbine.aggregator.cluster-config}
      # Username and password in case the SBA Server api is protected with HTTP Basic authentication.
      username: ${config.spring.boot.admin.username}
      password: ${config.spring.boot.admin.password}
      client:
        metadata:
          # Credentials being used to access the endpoints.
          user.name: ${config.spring.boot.admin.username}
          user.password: ${config.spring.boot.admin.password}
        # Use the ip-address rather then the hostname in the guessed urls.
        prefer-ip: true
      routes:
        # The enpoints which will be available via spring boot admin zuul proxy.
        endpoints: ${config.spring.boot.admin.routes.endpoints}
      monitor:
        # Connect timeout in ms when querying the applications' status and info.default 2000.
        connect-timeout: 60000
        # Read timeout in ms when querying the applications' status and info.default 5000.
        read-timeout: 60000
        # Time interval in ms to update the status of applications with expired status-information.default 10000.
        period: 30000
        # Lifetime of application statuses in ms. The applications /health-endpoint will not be queried until the lifetime has expired.default 10000.
        status-lifetime: 30000
      # If set to true the periodic task to register the application is automatically scheduled after the application is ready.default true.
      auto-registration: true
      # witch to enable auto-deregistration at Spring Boot Admin server when context is closed.default false.
      auto-deregistration: true
      # If set to true the client will only register against one admin server (in order defined by spring.boot.admin.url);
      # if that admin server goes down, will automatically register against the next admin server. If false, will register against all admin servers.
      register-once: true
      connect-timeout: 60000
      read-timeout: 60000
      notify:
        # Mail notifications config
        mail:
          enabled: ${config.spring.boot.admin.notify.mail.enabled}
          # spring boot admin接收通知邮箱
          to: ${config.spring.boot.admin.notify.email.to}
          # 必须与发件人的邮箱相同(否则报错:553 Mail from must equal authorized user)
          from: 18158861761@163.com

server:
  port: 8766
  compression:
    enabled: ${config.server.compression.enabled}

eureka:
  instance:
    appname: ${project.module.admin.monitor}
    # 心跳时间，即服务续约间隔时间（缺省为30s）
    lease-renewal-interval-in-seconds: 30
    # 发呆时间，即服务续约到期时间（缺省为90s）
    lease-expiration-duration-in-seconds: 90
    prefer-ip-address: true
  client:
    # 开启健康检查（需要spring-boot-starter-actuator依赖）
    healthcheck:
      enabled: ${config.eureka.client.healthcheck.enabled}
    # 注册服务
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      # 指定服务注册中心的地址(因为服务部署于一个服务器上)
      defaultZone: http://${service.discovery.node1}:${service.discovery.port}/eureka/,http://${service.discovery.node2}:${service.discovery.port}/eureka/
    registry-fetch-interval-seconds: 30

security:
  user:
    name: ${config.spring.boot.admin.username}
    password: ${config.spring.boot.admin.password}
    role: USER
  basic:
    realm: Spring # HTTP basic realm 的名字,默认为Spring
    path: /** # 需要鉴权的path，多个的话以逗号分隔,默认为[/**]
    enabled: ${config.management.security.enabled} # 是否开启基本的鉴权,默认为true
    authorize-mode: role # 要使用权限控制模式,默认为role
  filter-order: 0 # Security filter chain的order,默认为0
  headers:
    cache: true # 是否开启http头部的cache控制,默认为true
    content-type: true # 是否开启X-Content-Type-Options头部,默认为true
    frame: true # 是否开启X-Frame-Options头部,默认为true
    hsts: all # 指定HTTP Strict Transport Security(HSTS)模式(none, domain, all)
    xss: true # 是否开启cross-site scripting(XSS)保护,默认为true
  require-ssl: false # 是否对所有请求开启SSL,默认为false
  sessions: stateless # 指定Session的创建策略(always, never, if_required, stateless)
  enable-csrf: false # 是否开启cross-site request forgery校验,默认为false
  # oauth2: (oauth2的相关配置)

management:
  security:
    enabled: ${config.management.security.enabled}