# 生成log字段的名称,默认为log
lombok.log.fieldName=LOGGER

# 生成log是否是static的,默认true
lombok.log.fieldIsStatic=true

# 如果设置为true,lombok将直接访问字段,而不是在生成equals和hashcode方法时使用getter(如果可用)default: false
lombok.equalsAndHashCode.doNotUseGetters=true

# 如果设置为call,lombok将生成对hashCode的超类实现的调用.如果设置为skip,则不会生成这样的调用.默认行为warn类似于skip,并带有附加警告
lombok.equalsAndHashCode.callSuper=call

# 如果设置为true,lombok将直接访问字段,而不是在生成tostring方法时使用getter(如果可用)default: false
lombok.toString.doNotUseGetters=true

# 通常lombok以fieldName=fieldValue的形式为每个字段生成一个toString响应的片段.如果设置为false,lombok将省略字段的名称,可以在该注解上配置属性includeFieldNames来标示包含的字段,这样可以覆盖默认配置
lombok.toString.includeFieldNames=true

# 如果设置为true,生成的setter将返回this(而不是void),通过这个配置我们可以链式编程.可以在类加增加一个@Accessors 注解 配置chain属性,优先于全局配置 default: false
lombok.accessors.chain=false

# 如果设置为true,生成的getter和setter将不会使用bean标准的get、is或set进行前缀;相反方法将使用与字段相同的名称(减去前缀),可以在类加增加一个@Accessors注解,配置fluent属性,优先于全局配置 default: false
lombok.accessors.fluent=false

# 给getter/setter方法增加前缀 例如配置 +=M 原有的 getFoo方法将变为getMFoo方法
# lombok.accessors.prefix += a field prefix (default: empty list)

# 如果设置为true,那么boolean型字段生成的getter将使用get前缀而不是默认的is前缀
lombok.getter.noIsPrefix=false

# 默认情况下尽可能为所有生成的节点添加@javax.annotation.Generated注解
lombok.addJavaxGeneratedAnnotation=true