info:
  contact:
    email: ${project.build.email}
    phone: ${project.build.cellphone}
  version: ${project.version}
  description: ${project.description}

spring:
  application:
    # 指定发布的微服务名（以后调用时，只需该名称即可访问该服务）
    name: ${project.module.calculator.customer}
  boot:
    admin:
      username: ${config.spring.boot.admin.username}
      password: ${config.spring.boot.admin.password}
      auto-deregistration: true
      client:
        # Use the ip-address rather then the hostname in the guessed urls.
        prefer-ip: true

server:
  port: 8763
  compression:
    enabled: ${config.server.compression.enabled}

eureka:
  instance:
    appname: ${project.module.calculator.customer}
    # 心跳时间，即服务续约间隔时间（缺省为30s）
    lease-renewal-interval-in-seconds: 30
    # 发呆时间，即服务续约到期时间（缺省为90s）
    lease-expiration-duration-in-seconds: 90
    prefer-ip-address: true
  client:
    # 开启健康检查（需要spring-boot-starter-actuator依赖）
    healthcheck:
      enabled: ${config.eureka.client.healthcheck.enabled}
    # 注册服务
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      # 指定服务注册中心的地址(因为服务部署于一个服务器上)
      defaultZone: http://${service.discovery.node1}:${service.discovery.port}/eureka/,http://${service.discovery.node2}:${service.discovery.port}/eureka/

feign:
  httpclient:
    # 使用apache的httpClient作为HTTP客户端,而不是Java类库中原生的URLConnection
    enabled: true
  hystrix:
    # 开启feign熔断器
    enabled: true
  compression:
    # 开启请求与响应的GZIP压缩
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
      min-request-size: 2048
    response:
      enabled: true
  # 自定义重试配置
  retryer:
    enable: true # 是否重试
    period: 100 # 重试间隔周期,以毫秒为单位
    maxPeriod: 1 # 最大重试时间,以秒为单位
    maxAttempts: 3 # 最大重试次数

# 熔断器配置
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            # 在调用方配置,被该调用方的所有方法的超时时间都是该值
            timeoutInMilliseconds: 60000
      circuitBreaker:
        # 当在配置时间窗口内达到此数量的失败后,进行短路,默认20个
        requestVolumeThreshold: 20
        # 短路多久以后开始尝试是否恢复,默认5s
        sleepWindowInMilliseconds: 5
        # 出错百分比阈值,当达到此阈值后,开始短路,默认50%
        errorThresholdPercentage: 50
      fallback:
        isolation:
          semaphore:
            # 调用线程允许请求HystrixCommand.GetFallback()的最大数量,默认10,超出时将会有异常抛出
            maxConcurrentRequests: 10
  threadpool:
    default:
      # 线程池核心线程数,默认为10
      coreSize: 20
      # 最大排队长度,默认-1,使用SynchronousQueue
      maxQueueSize: -1

management:
  security:
    enabled: ${config.management.security.enabled}