<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.songlea.demo.cloud</groupId>
    <artifactId>spring-cloud-demo</artifactId>
    <!--
        在Maven3中其可用的打包类型如下:jar(默认类型)、war、ejb、ear、rar、par、pom、maven-plugin
        Maven 3支持Maven项目的多模块（multi-modules）结构：
            这样的Maven项目也被称为聚合项目,通常由一个父模块和若干个子模块构成;
            其中父模块必须以pom打包类型,同时以<modules>给出所有的子模块;
            其中的每个module都是另外一个Maven项目;
     -->
    <packaging>pom</packaging>
    <version>0.0.1-SNAPSHOT</version>

    <name>spring-cloud-demo</name>
    <description>Demo project for Spring Cloud</description>
    <url>https://cloud.spring.io/spring-cloud-static/Edgware.RELEASE/multi/multi_spring-cloud.html</url>

    <modules>
        <!-- 服务注册中心/统一路由网关、配置中心模块 -->
        <module>registry-service</module>
        <module>gateway-service</module>
        <module>config-service</module>
        <!-- 其他业务层模块... -->
        <module>business-service</module>
        <module>monitor-service</module>
        <module>security-service</module>
        <module>kotlin-service</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <java.version>1.8</java.version>
        <spring-cloud.version>Greenwich.SR1</spring-cloud.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- 各个模块名定义 -->
        <project.module.service.registry>registry-service</project.module.service.registry>
        <project.module.service.gateway>gateway-service</project.module.service.gateway>
        <project.module.service.config>config-service</project.module.service.config>
        <project.module.service.business>business-service</project.module.service.business>
        <project.module.service.monitor>monitor-service</project.module.service.monitor>
        <project.module.service.security>security-service</project.module.service.security>
        <project.build.info.author>Song Lea</project.build.info.author>
        <project.build.info.email>lsong329483@gmail.com</project.build.info.email>
        <project.build.info.github>https://github.com/SongLea</project.build.info.github>

        <!--Spring Cloud Config Server 的配置信息 -->
        <spring.cloud.config.server.uri>https://github.com/SongLea/spring-cloud-demo.git
        </spring.cloud.config.server.uri>
        <!-- 配置中心在git上的搜索路径(哪个文件夹下) -->
        <spring.cloud.config.server.search.paths>config-repository</spring.cloud.config.server.search.paths>
        <!-- 此处为公有库,不需要密码
        <spring.cloud.config.server.username>your github username</spring.cloud.config.server.username>
        <spring.cloud.config.server.password>your github password</spring.cloud.config.server.password>
        -->

        <!-- 邮件服务器配置
        <project.spring.mail.host>smtp.163.com</project.spring.mail.host>
        <project.spring.mail.port>25</project.spring.mail.port>
        <project.spring.mail.username>your email address</project.spring.mail.username>
        <project.spring.mail.password>your email password</project.spring.mail.password>
        -->

        <!--声明相应的Jar包版本-->
        <zuul.ratelimit.version>2.2.3.RELEASE</zuul.ratelimit.version>
        <commons.pool2.version>2.6.2</commons.pool2.version>
        <commons.io.version>2.6</commons.io.version>
        <commons.lang3.version>3.8</commons.lang3.version>
        <commons.codec.version>1.11</commons.codec.version>
        <alibaba.fastjson.version>1.2.49</alibaba.fastjson.version>
        <alibaba.druid.version>1.1.10</alibaba.druid.version>
        <mybatis.spring.boot.starter.version>1.3.2</mybatis.spring.boot.starter.version>
        <mapper.spring.boot.starter.version>2.0.4</mapper.spring.boot.starter.version>
        <pagehelper.spring.boot.starter.version>1.2.7</pagehelper.spring.boot.starter.version>
        <mybatis.generator.maven.plugin.version>1.3.7</mybatis.generator.maven.plugin.version>
    </properties>

    <dependencies>
        <!-- lombok 支持 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!--Spring Web工程-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--生产环境时监视和管理应用程序-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!--SpringBoot测试-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-test-support</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <!--使用mvn help:active-profiles可以查看处于激活状态的profile-->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- dev环境下使用dev后缀的配置中心文件,如config-repository/business-service-dev.yml -->
                <spring.cloud.config.profile>dev</spring.cloud.config.profile>
                <spring.cloud.config.label>master</spring.cloud.config.label>

                <!-- eureka服务注册中心地址、端口(单实例,多个需要互相注册)与其他服务端口 [10.180.11.75]-->
                <service.registry.node1>localhost</service.registry.node1>
                <service.registry.port>8761</service.registry.port>
                <service.gateway.port>8762</service.gateway.port>
                <service.config.port>8763</service.config.port>
                <service.business.port>8764</service.business.port>
                <service.monitor.port>8765</service.monitor.port>
                <service.security.port>8766</service.security.port>

                <!-- eureka客户端连接注册中心的配置 -->
                <config.eureka.server.security.user.name>admin</config.eureka.server.security.user.name>
                <config.eureka.server.security.user.password>admin2018</config.eureka.server.security.user.password>
                <config.eureka.server.default.zone>
                    <![CDATA[http://${config.eureka.server.security.user.name}:${config.eureka.server.security.user.password}@${service.registry.node1}:${service.registry.port}/eureka/]]>
                </config.eureka.server.default.zone>

                <!-- RabbitMq配置(用于配置中心的推送更新) -->
                <config.spring.rabbitmq.host>localhost</config.spring.rabbitmq.host>
                <config.spring.rabbitmq.port>5672</config.spring.rabbitmq.port>
                <config.spring.rabbitmq.username>guest</config.spring.rabbitmq.username>
                <config.spring.rabbitmq.password>guest</config.spring.rabbitmq.password>

                <!-- Redis连接配置 -->
                <config.spring.redis.database.gateway>1</config.spring.redis.database.gateway>
                <config.spring.redis.database.security>2</config.spring.redis.database.security>
                <config.spring.redis.host>localhost</config.spring.redis.host>
                <config.spring.redis.port>6379</config.spring.redis.port>
                <config.spring.redis.password/>

                <!-- Mysql数据库连接配置 -->
                <config.spring.datasource.url>
                    <![CDATA[jdbc:mysql://localhost:3306/oauth2?useSSL=false&autoReconnect=true&useUnicode=true&characterEncoding=utf-8&allowPublicKeyRetrieval=true]]>
                </config.spring.datasource.url>
                <config.spring.datasource.username>root</config.spring.datasource.username>
                <config.spring.datasource.password>root2018</config.spring.datasource.password>
            </properties>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>pem</nonFilteredFileExtension>
                        <nonFilteredFileExtension>pfx</nonFilteredFileExtension>
                        <nonFilteredFileExtension>keystore</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>
</project>